{"version":3,"sources":["utils/funcRanges.js","components/graph/graph.js","actions/actions.js","actions/types/types.js","components/forecasts/index.js","components/forecasts/forecasts.js","components/app/index.js","components/app/app.js","components/error-indicator/error-indicator.js","components/error-boundry/index.js","components/error-boundry/error-boundry.js","reducers/reducers.js","reducers/index.js","store/index.js","store/store.js","index.js"],"names":["funcRanges","data","map","ele","firstRange","finalRange","i","ranges","length","currentRange","Graph","this","props","newRange","newArray","index","newRanges","setRangesGraph","styleRanges","background","className","Fragment","title","style","width","forecast","minValue","maxValue","Component","mapDispatchToProps","type","payload","connect","Forecasts","App","role","ErrorIndicator","ErrorBoundry","state","hasError","error","errorInfo","setState","children","initialState","reducer","action","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iTA4BeA,EA3BI,SAACC,GAAD,OACfA,EAAKC,KAAI,SAAAC,GAGP,IAFA,IAAIC,EAAa,KACbC,EAAa,KACRC,EAAI,EAAGA,EAAIH,EAAII,OAAOC,OAAQF,IAAK,CAI1C,GAAU,IAANA,GAAWH,EAAII,OAAOD,GAAKH,EAAII,OAAOD,EAAE,GAAI,CAChD,IACIG,GADMN,EAAII,OAAOD,GAAKH,EAAII,OAAOD,EAAE,IACd,EAKzBD,GAFgBF,EAAII,OAAOD,GAAKG,EAGhCL,GAAcD,EAAII,OAAOD,GAAKH,EAAII,OAAOD,EAAE,IAAM,EAIjDD,GAAcF,EAAII,OAAOD,GAI3B,MAAO,CADPF,EAA4B,OAAfA,EAAsBD,EAAII,OAAO,GAAKJ,EAAII,OAAO,GAAKH,EAC9CC,OClBrBK,G,wLAEiB,IACXT,EAASU,KAAKC,MAAdX,KACFY,EAAWb,EAAWC,GAEtBa,EAAWb,EAAKC,KAAI,SAACC,EAAKY,GAE9B,OADAZ,EAAIa,UAAYH,EAASE,GAClBZ,KAGTQ,KAAKC,MAAMK,eAAeH,K,+BAGlB,IACAb,EAASU,KAAKC,MAAdX,KAEFiB,EAAc,SAAC,GAAD,uBAAEd,EAAF,KAAcC,EAAd,WAClB,CACEc,WAAW,wGAAD,OAGcf,EAHd,+CAIgBA,EAJhB,+CAKgBC,EALhB,gDAMiBA,EANjB,0DAYd,OACE,qBAAKe,UAAU,QAAf,SAEInB,EAAKC,KAAI,SAACC,EAAKY,GACb,OACE,eAAC,IAAMM,SAAP,WACE,oBAAID,UAAU,uBAAd,SAAuCjB,EAAImB,QAC3C,sBAAKF,UAAU,aAAaG,MAAQL,EAAYf,EAAIa,WAApD,UACE,qBAAKI,UAAU,cAAcG,MAAO,CAACC,MAAM,GAAD,OAAoB,EAAfrB,EAAIsB,SAAT,QAC1C,qBAAKL,UAAU,cAAcG,MAAO,CAACC,MAAM,GAAD,OAAoB,EAAfrB,EAAIsB,SAAT,WAE5C,sBAAKL,UAAU,yBAAf,UACE,oBAAGA,UAAU,mBAAb,eAAoCjB,EAAIuB,YACxC,oBAAGN,UAAU,mBAAb,eAAoCjB,EAAIwB,iBARvBZ,Y,GApCfa,cA2DdC,EAAqB,CACzBZ,eCjEqB,SAACD,GACtB,MAAO,CACLc,KCJqB,mBDKrBC,QAASf,KDiEEgB,eARS,SAAC,GACvB,MAAO,CAAE/B,KAD2B,EAAXA,QAQa4B,EAAzBG,CAA6CtB,GGpE7CuB,G,MCEG,WAChB,OACE,sBAAKb,UAAU,YAAf,UACE,oBAAIA,UAAU,2BAAd,uBACA,qBAAKA,UAAU,uBAAf,SACE,cAAC,EAAD,WCPOc,ECGH,WAEV,OACI,sBAAMC,KAAK,OAAOf,UAAU,MAA5B,SACE,cAAC,EAAD,OCGOgB,G,MARQ,WACrB,OACI,qBAAKhB,UAAU,kBAAf,SACE,2DCLOiB,E,4MCIbC,MAAQ,CACNC,UAAU,G,gEAGMC,EAAOC,GACvB9B,KAAK+B,SAAS,CAACH,UAAU,M,+BAOzB,OAFoB5B,KAAK2B,MAAjBC,SAGC,cAAC,EAAD,IAIP5B,KAAKC,MAAM+B,a,GAnByBf,a,OCJpCgB,EAAe,CACnB3C,KAAM,CACJ,CACEqB,MAAO,gBACPf,OAAQ,CAAC,GAAI,GAAI,IACjBkB,SAAU,GACVC,SAAU,OACVC,SAAU,OACVX,UAAW,IAEb,CACEM,MAAO,kBACPf,OAAQ,CAAC,GAAI,GAAI,IACjBkB,SAAU,GACVC,SAAU,OACVC,SAAU,OACVX,UAAW,MCdF6B,EDmBC,WAAmC,IAAlCP,EAAiC,uDAAzBM,EAAcE,EAAW,uCAChD,OAAQA,EAAOhB,MACb,IAAK,mBACH,MAAO,CACL7B,KAAM6C,EAAOf,QACbxB,OAAQ+B,EAAM/B,QAIlB,QACE,OAAO+B,IE7BES,ECCDC,YAAYH,GCO1BI,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUJ,MAAQA,EAAlB,SACE,cAAC,EAAD,UACE,cAAC,EAAD,UAINK,SAASC,eAAe,W","file":"static/js/main.7882bb44.chunk.js","sourcesContent":["// find the values of points on the chart\r\nconst funcRanges = (data) =>\r\n    data.map(ele => {\r\n      let firstRange = null;\r\n      let finalRange = null;\r\n      for (let i = 0; i < ele.ranges.length; i++) {\r\n        // if the value of the array is greater than the next one, \r\n        // then we add these values ​​and divide by 2, \r\n        // thereby we find the first point on the chart\r\n        if (i === 0 && ele.ranges[i] > ele.ranges[i+1]) {\r\n        let sum = ele.ranges[i] + ele.ranges[i+1]\r\n        let currentRange = sum / 2\r\n\r\n        // find the remainder to add it to the final value\r\n        let remainder = ele.ranges[i] - currentRange\r\n\r\n        finalRange += remainder\r\n        firstRange = (ele.ranges[i] + ele.ranges[i+1]) / 2\r\n        }\r\n\r\n        // find the end point by summing all the elements of the array\r\n        finalRange += ele.ranges[i]\r\n      }\r\n\r\n      firstRange = firstRange === null ? ele.ranges[0] + ele.ranges[1] : firstRange\r\n      return [ firstRange, finalRange ]\r\n    })\r\n\r\nexport default funcRanges;","import React, { Component } from \"react\";\r\nimport { funcRanges } from '../../utils'\r\nimport { connect } from 'react-redux'\r\nimport { setRangesGraph } from '../../actions'\r\n\r\nimport './style/graph.scss'\r\n\r\nclass Graph extends Component {\r\n\r\n  componentDidMount() {\r\n    const { data } = this.props;\r\n    const newRange = funcRanges(data)\r\n\r\n    const newArray = data.map((ele, index) => {\r\n      ele.newRanges = newRange[index]\r\n      return ele\r\n    })\r\n\r\n    this.props.setRangesGraph(newArray)\r\n  }\r\n\r\n  render() {\r\n    const { data } = this.props;\r\n\r\n    const styleRanges = ([firstRange, finalRange]) => (\r\n      {\r\n        background: `linear-gradient(\r\n          90deg,\r\n          rgba(11, 32, 53, 1) 0%,\r\n          rgba(11, 32, 53, 1) ${firstRange}%,\r\n          rgba(40, 107, 250, 1) ${firstRange}%,\r\n          rgba(40, 107, 250, 1) ${finalRange}%,\r\n          rgba(119, 195, 247, 1) ${finalRange}%,\r\n          rgba(119, 195, 247, 1) 100%\r\n        )`\r\n      }\r\n    )\r\n\r\n    return (\r\n      <div className=\"graph\">\r\n        {\r\n          data.map((ele, index) => {\r\n            return (\r\n              <React.Fragment key={index}>\r\n                <h3 className=\"graph__content-title\">{ ele.title }</h3>\r\n                <div className=\"graph__box\" style={ styleRanges(ele.newRanges) }>\r\n                  <div className=\"graph__line\" style={{width: `${ele.forecast * 2}%`}}></div>\r\n                  <div className=\"graph__icon\" style={{width: `${ele.forecast * 2}%`}}></div>\r\n                </div>\r\n                <div className=\"graph__container-value\">\r\n                  <p className=\"graph__paragraph\">$ { ele.minValue }</p>\r\n                  <p className=\"graph__paragraph\">$ { ele.maxValue }</p>\r\n                </div>\r\n              </React.Fragment>\r\n            )\r\n          })\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ data }) => {\r\n  return { data }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setRangesGraph\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Graph)\r\n","import { SET_RANGES_GRAPH } from './types'\r\n\r\nconst setRangesGraph = (newRanges) => {\r\n  return {\r\n    type: SET_RANGES_GRAPH,\r\n    payload: newRanges\r\n  }\r\n}\r\n\r\nexport { setRangesGraph }","const SET_RANGES_GRAPH = 'SET_RANGES_GRAPH'\r\n\r\nexport { SET_RANGES_GRAPH }","import Forecasts from './forecasts';\r\n\r\nexport default Forecasts;","import React from \"react\";\r\nimport Graph from '../graph/graph';\r\nimport './style/forecasts.scss'\r\n\r\nconst Forecasts = () => {\r\n  return (\r\n    <div className=\"forecasts\">\r\n      <h2 className=\"forecasts__content-title\">FORECASTS</h2>\r\n      <div className=\"forecasts__container\">\r\n        <Graph />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Forecasts\r\n","import App from './app';\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport './app.css';\r\n\r\nimport Forecasts from \"../forecasts\";\r\n\r\nconst App = () => {\r\n\r\n  return (\r\n      <main role=\"main\" className=\"app\">\r\n        <Forecasts />\r\n      </main>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\n\r\nimport './error-indicator.css';\r\n\r\nconst ErrorIndicator = () => {\r\n  return (\r\n      <div className=\"error-indicator\">\r\n        <p>Oops! Something wrong.</p>\r\n      </div>\r\n  )\r\n};\r\n\r\nexport default ErrorIndicator;\r\n","import ErrorBoundry from \"./error-boundry\";\r\n\r\nexport default ErrorBoundry;\r\n","import React, { Component } from \"react\";\r\n\r\nimport ErrorIndicator from \"../error-indicator/error-indicator\";\r\n\r\nexport default class ErrorBoundry extends Component {\r\n\r\n  state = {\r\n    hasError: false\r\n  };\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    this.setState({hasError: true})\r\n  }\r\n\r\n  render() {\r\n\r\n    const { hasError} = this.state;\r\n\r\n    if (hasError) {\r\n      return <ErrorIndicator />\r\n    }\r\n\r\n    return (\r\n      this.props.children\r\n    )\r\n  }\r\n\r\n}\r\n\r\n","const initialState = {\r\n  data: [\r\n    {\r\n      title: 'Current Month',\r\n      ranges: [10, 20, 40],\r\n      forecast: 10,\r\n      minValue: '1.6k',\r\n      maxValue: '2.4k',\r\n      newRanges: []\r\n    },\r\n    {\r\n      title: 'Current Quarter',\r\n      ranges: [20, 10, 40],\r\n      forecast: 30,\r\n      minValue: '1.6k',\r\n      maxValue: '2.4k',\r\n      newRanges: []\r\n    }\r\n  ]\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'SET_RANGES_GRAPH': {\r\n      return {\r\n        data: action.payload,\r\n        ranges: state.ranges,\r\n      }\r\n    }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default reducer;","import reducer from './reducers';\r\n\r\nexport default reducer;","import store from './store';\r\n\r\nexport default store;","import { createStore } from 'redux'\r\nimport reducer from '../reducers'\r\n\r\nconst store = createStore(reducer)\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\nimport App from './components/app';\nimport ErrorBoundry from './components/error-boundry'\n\nimport store from './store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={ store }>\n      <ErrorBoundry>\n        <App />\n      </ErrorBoundry>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}